# yaml形式でgithub-actionの記述
# yaml のインデントは基本スペース: 2

name: backend

on:
  push: 
    branches:
      - master
  # schedule:
    # 日本時間で毎晩15時27分に実行
    # UTCなので、+9時間で計算
    # - cron: '27 6 * * *'

defaults:
  run:
    working-directory: backend

jobs:
  # ビルド・テストフェーズ
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - run: npm ci
      - run: npm run test -- --coverage
      - run: npm run build
      # buildでトランスコンパイルし、コンパイルされたjsをバックグラウンド実行
      - run: node dist/index.js &
      # node が起動しているかチェックするため、wait-on パッケージを使用する
      # アドホックで実行し、パッケージバージョンを指定
      - run: npx wait-on@7.0.1 -t 10000 http://localhost:8080/api/health
      # Step CI の実行
      - run: npm run stepci

      - uses: actions/upload-artifact@v3
        # ステップが失敗しても実行
        if: always()
        with:
          name: coverage
          path: backend/coverage/**
          retention-days: 5
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: backend/dist/index.js
          retention-days: 5
  # デプロイジョブ
  deploy:
    # 前job
    needs: build
    # pushイベントのときのみ実行
    if: github.event_name == 'push'
    # job実行ランナー
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: backend/dist
      # Marketplaceから使用したactions
      # このアクションを使用することでsshキーがインストールされ、各ステップでキーの指定が不要となる
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.BACKEND_SERVER_SSH_KEY }}
          known_hosts: ${{ secrets.BACKEND_SERVER_KNOWN_HOSTS }}
      # ファイルアップロードのコマンド
      # ランナーからscpでサーバーにファイルアップロード
      - run: scp /home/runner/work/github-actions/github-actions/backend/index.js ${SERVER_USER}@${SERVER_IP}:/home/ubuntu/src
      # サービスリスタート
      - run: ssh ${SERVER_USER}@${SERVER_IP} sudo systemctl restart backend.service
        env:
          SERVER_USER: ${{secrets.BACKEND_SERVER_USER}}
          SERVER_IP: ${{secrets.BACKEND_SERVER_IP}}
      # サービス状態
      - run: ssh ${SERVER_USER}@${SERVER_IP} systemctl status backend.service
        env:
          SERVER_USER: ${{secrets.BACKEND_SERVER_USER}}
          SERVER_IP: ${{secrets.BACKEND_SERVER_IP}}
